{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","index.js"],"names":["Alert","props","style","height","textAlign","position","bottom","right","alert","className","type","role","replace","toUpperCase","msg","Navbar","mode","href","title","id","searchBar","placeholder","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","color","heading","value","onChange","event","target","rows","backgroundColor","fontSize","disabled","length","fontWeight","showAlert","toLowerCase","lines","split","capEachLine","forEach","line","filter","element","push","CapEachWord","word","newLine","join","finalLines","navigator","clipboard","writeText","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","transition","ReactDOM","render","StrictMode","getElementById"],"mappings":"uKA+BeA,MA7Bf,SAAeC,GACb,OACE,qBACEC,MAAO,CACLC,OAAQ,OACRC,UAAW,SACXC,SAAU,QACVC,OAAQ,MACRC,MAAO,OANX,SASGN,EAAMO,OACL,sBACEC,UAAS,sBAAiBR,EAAMO,MAAME,KAA7B,2BACTC,KAAK,QAFP,UAIE,mCACGV,EAAMO,MAAME,KAAKE,QAChBX,EAAMO,MAAME,KAAK,GACjBT,EAAMO,MAAME,KAAK,GAAGG,eACnB,OACK,IATZ,KAUKZ,EAAMO,MAAMM,UCrBV,SAASC,EAAOd,GAC7B,OACE,qBAAKQ,UAAS,oDAA+CR,EAAMe,KAArD,eAAgEf,EAAMe,MAApF,SACE,sBAAKP,UAAU,YAAf,UACE,mBAAGA,UAAU,eAAeQ,KAAK,IAAjC,SACE,kCAAKhB,EAAMiB,WAEb,wBACET,UAAU,iBACVC,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMD,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BU,GAAG,yBAA7C,UACE,oBAAIV,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,YAAY,eAAa,OAAOQ,KAAK,IAAlD,sBAKHhB,EAAMmB,UACL,uBAAMX,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBC,KAAK,SAASW,YAAY,SAAS,aAAW,WACnF,wBAAQZ,UAAU,0BAA0BC,KAAK,SAAjD,uBAKF,GAEF,sBAAKD,UAAU,8BAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,WAAWS,GAAG,yBAAyBG,QAASrB,EAAMsB,aAC/F,uBAAOd,UAAS,qCAA+C,UAAfR,EAAMe,KAAmB,OAAS,SAAWQ,QAAQ,yBAArG,yCCtCG,SAASC,EAASxB,GAC/B,MAAwByB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA8DA,OACE,qCACE,sBACEnB,UAAU,YACVP,MAAO,CACL2B,MAAsB,UAAf5B,EAAMe,KAAmB,QAAU,SAH9C,UAME,oBAAIP,UAAU,OAAd,SAAsBR,EAAM6B,UAC5B,qBAAKrB,UAAU,OAAf,SACE,0BACEA,UAAU,eACVsB,MAAOJ,EACPK,SAzEa,SAACC,GACtBL,EAAQK,EAAMC,OAAOH,QAyEbV,YAAY,kBACZF,GAAG,QACHgB,KAAK,IACLjC,MAAO,CACLkC,gBAAgC,UAAfnC,EAAMe,KAAmB,QAAU,UACpDa,MAAsB,UAAf5B,EAAMe,KAAmB,QAAU,QAC1CqB,SAAU,YAKhB,wBAAQC,SAA0B,IAAhBX,EAAKY,OAAc9B,UAAU,mBAAmBP,MAAO,CAAEsC,WAAY,OAASlB,QAlFhF,WACpBM,EAAQD,EAAKd,eACbZ,EAAMwC,UAAU,0BAA2B,YAgFvC,kCAGA,wBAAQH,SAA0B,IAAhBX,EAAKY,OAAc9B,UAAU,mBAAmBP,MAAO,CAAEsC,WAAY,OAASlB,QAjF/E,WACrBM,EAAQD,EAAKe,eACbzC,EAAMwC,UAAU,0BAA2B,YA+EvC,kCAGA,wBAAQH,SAA0B,IAAhBX,EAAKY,OAAc9B,UAAU,mBAAmBP,MAAO,CAAEsC,WAAY,OAASlB,QAhFvE,WAC7B,IAAMqB,EAAQhB,EAAKiB,MAAM,MACnBC,EAAc,GACpBF,EAAMG,SAAQ,SAAUC,GACtB,GAGgB,IAFdA,EAAKH,MAAM,OAAOI,QAAO,SAACC,GACxB,OAA0B,IAAnBA,EAAQV,UACdA,OAEHM,EAAYK,KAAKH,OACZ,CACL,IAAII,EAAc,GACNJ,EAAKL,cAAcE,MAAM,KAC/BE,SAAQ,SAAUM,GACF,IAAhBA,EAAKb,OACPY,EAAYD,KAAKE,GAEjBD,EAAYD,KAAKE,EAAKxC,QAAQwC,EAAK,GAAIA,EAAK,GAAGvC,mBAGnD,IAAIwC,EAAUF,EAAYG,KAAK,KAC/BT,EAAYK,KAAKG,OAGrBzB,EAAQiB,EAAYS,KAAK,OACzBrD,EAAMwC,UAAU,0BAA2B,YAuDvC,oCAGA,wBAAQH,SAA0B,IAAhBX,EAAKY,OAAc9B,UAAU,mBAAmBP,MAAO,CAAEsC,WAAY,OAASlB,QAxD5E,WACxB,IAAMqB,EAAQhB,EAAKiB,MAAM,MACnBW,EAAa,GACnBZ,EAAMG,SAAQ,SAAUC,GACtB,IAAIM,EAAUN,EAAKH,MAAM,OAAOI,QAAO,SAACC,GACtC,OAA0B,IAAnBA,EAAQV,UAEjBgB,EAAWL,KAAKG,EAAQC,KAAK,SAG/B1B,EAAQ2B,EAAWD,KAAK,OACxBrD,EAAMwC,UAAU,uBAAwB,YA6CpC,iCAGA,wBAAQH,SAA0B,IAAhBX,EAAKY,OAAc9B,UAAU,mBAAmBP,MAAO,CAAEsC,WAAY,OAASlB,QA7C9E,WACtBkC,UAAUC,UAAUC,UAAU/B,GAC9B1B,EAAMwC,UAAU,4BAA6B,YA2CzC,+BAGA,wBAAQH,SAA0B,IAAhBX,EAAKY,OAAc9B,UAAU,mBAAmBP,MAAO,CAAEsC,WAAY,OAASlB,QA5C9E,WACtBM,EAAQ,IACR3B,EAAMwC,UAAU,gBAAiB,YA0C7B,2BAIF,sBACEhC,UAAU,iBACVP,MAAO,CACL2B,MAAsB,UAAf5B,EAAMe,KAAmB,QAAU,SAH9C,UAME,mDACA,wCACU,IAENW,EAAKiB,MAAM,OAAOI,QAAO,SAACC,GACxB,OAA0B,IAAnBA,EAAQV,UACdA,OACH,IACF,uBAPF,iBAOuBZ,EAAKY,OAAQ,OAEpC,8CACA,4BAAIZ,EAAKY,OAAS,EAAIZ,EAAO,6BDvErCZ,EAAO4C,aAAe,CACpBzC,MAAO,kBACPE,WAAW,GErDb,IAwCewC,EAxCH,WACV,MAAwBlC,mBAAS,SAAjC,mBAAOV,EAAP,KAAa6C,EAAb,KAiBA,EAA0BnC,mBAAS,MAAnC,mBAAOlB,EAAP,KAAcsD,EAAd,KACMrB,EAAY,SAACsB,EAASrD,GAC1BoD,EAAS,CACPhD,IAAKiD,EACLrD,KAAMA,IAERsD,YAAW,WACTF,EAAS,QACR,MAGL,OACE,qCACE,cAAC/C,EAAD,CAAQG,MAAM,WAAWE,WAAW,EAAOJ,KAAMA,EAAMO,WA7BxC,WACjByC,YAAW,WACI,UAAThD,GACF6C,EAAQ,QACRI,SAASC,KAAKhE,MAAMkC,gBAAkB,UACtC6B,SAASC,KAAKhE,MAAMiE,WAAa,OACjC1B,EAAU,qBAAsB,aAEhCoB,EAAQ,SACRI,SAASC,KAAKhE,MAAMkC,gBAAkB,QACtC6B,SAASC,KAAKhE,MAAMiE,WAAa,OACjC1B,EAAU,sBAAuB,cAElC,MAgB8EA,UAAWA,IAC1F,cAAC,EAAD,CAAOjC,MAAOA,IACd,qBAAKC,UAAU,iBAAf,SACE,cAACgB,EAAD,CAAUK,QAAQ,kEAAkEd,KAAMA,EAAMyB,UAAWA,UClCnH2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,SAASM,eAAe,U","file":"static/js/main.f40000ec.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"60px\",\r\n        textAlign: \"center\",\r\n        position: \"fixed\",\r\n        bottom: \"8px\",\r\n        right: \"8px\",\r\n      }}\r\n    >\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible px-3`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>\r\n            {props.alert.type.replace(\r\n              props.alert.type[0],\r\n              props.alert.type[0].toUpperCase()\r\n            )}{\" \"}\r\n          </strong>{\" \"}\r\n          : {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar sticky-top navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          <b> {props.title}</b>\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link \" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {props.searchBar ? (\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"form-check form-switch mx-3\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n            <label className={`form-check-label info text-${props.mode === \"light\" ? \"dark\" : \"light\"}`} htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  searchBar: PropTypes.bool,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Your title here\",\r\n  searchBar: true,\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleUpClick = () => {\r\n    setText(text.toUpperCase());\r\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n  };\r\n  const handleCapitalizedClick = () => {\r\n    const lines = text.split(/\\n/);\r\n    const capEachLine = [];\r\n    lines.forEach(function (line) {\r\n      if (\r\n        line.split(/\\s+/).filter((element) => {\r\n          return element.length !== 0;\r\n        }).length === 0\r\n      ) {\r\n        capEachLine.push(line);\r\n      } else {\r\n        let CapEachWord = [];\r\n        let words = line.toLowerCase().split(\" \");\r\n        words.forEach(function (word) {\r\n          if (word.length === 0) {\r\n            CapEachWord.push(word);\r\n          } else {\r\n            CapEachWord.push(word.replace(word[0], word[0].toUpperCase()));\r\n          }\r\n        });\r\n        let newLine = CapEachWord.join(\" \");\r\n        capEachLine.push(newLine);\r\n      }\r\n    });\r\n    setText(capEachLine.join(\"\\n\"));\r\n    props.showAlert(\"Capitalized Each Words!\", \"success\");\r\n  };\r\n  const handleRemoveSpace = () => {\r\n    const lines = text.split(/\\n/);\r\n    const finalLines = [];\r\n    lines.forEach(function (line) {\r\n      let newLine = line.split(/\\s+/).filter((element) => {\r\n        return element.length !== 0;\r\n      });\r\n      finalLines.push(newLine.join(\" \"));\r\n    });\r\n\r\n    setText(finalLines.join(\"\\n\"));\r\n    props.showAlert(\"Extra Space Removed!\", \"success\");\r\n  };\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text Copied to Clipboard!\", \"success\");\r\n  };\r\n  const handleClearText = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text Cleared!\", \"success\");\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h1 className=\"mb-4\">{props.heading}</h1>\r\n        <div className=\"my-2\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            placeholder=\"Enter text here\"\r\n            id=\"myBox\"\r\n            rows=\"7\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#071E3D\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n              fontSize: \"17px\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button disabled={text.length === 0} className=\"btn btn-info m-2\" style={{ fontWeight: \"500\" }} onClick={handleUpClick}>\r\n          Convert to UPPERCASE\r\n        </button>\r\n        <button disabled={text.length === 0} className=\"btn btn-info m-2\" style={{ fontWeight: \"500\" }} onClick={handleLowClick}>\r\n          Convert to lowercase\r\n        </button>\r\n        <button disabled={text.length === 0} className=\"btn btn-info m-2\" style={{ fontWeight: \"500\" }} onClick={handleCapitalizedClick}>\r\n          Capitalized Each Words\r\n        </button>\r\n        <button disabled={text.length === 0} className=\"btn btn-info m-2\" style={{ fontWeight: \"500\" }} onClick={handleRemoveSpace}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button disabled={text.length === 0} className=\"btn btn-info m-2\" style={{ fontWeight: \"500\" }} onClick={handleCopyClick}>\r\n          Copy to Clipboard\r\n        </button>\r\n        <button disabled={text.length === 0} className=\"btn btn-info m-2\" style={{ fontWeight: \"500\" }} onClick={handleClearText}>\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h2>Your Text Summery</h2>\r\n        <p>\r\n          Words :{\" \"}\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          <br /> Characters : {text.length}{\" \"}\r\n        </p>\r\n        <h2>Text Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to Preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nconst App = () => {\n  const [mode, setMode] = useState(\"light\");\n  const toggleMode = () => {\n    setTimeout(() => {\n      if (mode === \"light\") {\n        setMode(\"dark\");\n        document.body.style.backgroundColor = \"#071E3D\";\n        document.body.style.transition = \"0.2s\";\n        showAlert(\"Dark mode Enabled!\", \"success\");\n      } else {\n        setMode(\"light\");\n        document.body.style.backgroundColor = \"white\";\n        document.body.style.transition = \"0.2s\";\n        showAlert(\"Light mode Enabled!\", \"success\");\n      }\n    }, 200);\n  };\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 4000);\n  };\n\n  return (\n    <>\n      <Navbar title=\"TextAide\" searchBar={false} mode={mode} toggleMode={toggleMode} showAlert={showAlert} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm heading=\"Try TextAide - Word Counter, Character Counter, Manipulate Text\" mode={mode} showAlert={showAlert} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}